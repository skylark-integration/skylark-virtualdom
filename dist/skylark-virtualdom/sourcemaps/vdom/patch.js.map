{"version":3,"sources":["vdom/patch.js"],"names":["define","__module__0","__module__1","__module__2","__module__3","__module__4","exports","module","document","isArray","render","domIndex","patchOp","patchRecursive","rootNode","patches","renderOptions","indices","key","push","Number","patchIndices","length","index","a","ownerDocument","i","nodeIndex","applyPatch","domNode","patchList","newNode","__isValidToReturn","obj","Array","attr","__isEmptyObject","patch"],"mappings":";;;;;;;AAAAA,QACI,uBACA,uBACA,mBACA,cACA,cACD,SAAUC,EAAaC,EAAaC,EAAaC,EAAaC,GAC7D,aACA,IAAIC,KACAC,GAAWD,YACXE,EAAWP,EAAYO,SACvBC,EAAUP,EAAYO,QACtBC,EAASP,EACTQ,EAAWP,EACXQ,EAAUP,EAQd,SAASQ,EAAeC,EAAUC,EAASC,GACvC,IAAIC,EAmCR,SAAsBF,GAClB,IAAIE,KACJ,IAAK,IAAIC,KAAOH,EACA,MAARG,GACAD,EAAQE,KAAKC,OAAOF,IAG5B,OAAOD,EA1COI,CAAaN,GAC3B,GAAuB,IAAnBE,EAAQK,OACR,OAAOR,EAEX,IAAIS,EAAQZ,EAASG,EAAUC,EAAQS,EAAGP,GACtCQ,EAAgBX,EAASW,cACxBT,EAAcR,UAAYiB,IAAkBjB,IAC7CQ,EAAcR,SAAWiB,GAE7B,IAAK,IAAIC,EAAI,EAAGA,EAAIT,EAAQK,OAAQI,IAAK,CACrC,IAAIC,EAAYV,EAAQS,GACxBZ,EAAWc,EAAWd,EAAUS,EAAMI,GAAYZ,EAAQY,GAAYX,GAE1E,OAAOF,EAEX,SAASc,EAAWd,EAAUe,EAASC,EAAWd,GAC9C,IAAKa,EACD,OAAOf,EAEX,IAAIiB,EACJ,GAAItB,EAAQqB,GACR,IAAK,IAAIJ,EAAI,EAAGA,EAAII,EAAUR,OAAQI,IAClCK,EAAUnB,EAAQkB,EAAUJ,GAAIG,EAASb,GACrCa,IAAYf,IACZA,EAAWiB,QAInBA,EAAUnB,EAAQkB,EAAWD,EAASb,GAClCa,IAAYf,IACZA,EAAWiB,GAGnB,OAAOjB,EAiBX,SAASkB,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMzB,QAAQwB,KAPnD,SAAyBA,GACrB,IAAIE,EACJ,IAAKA,KAAQF,EACT,OAAO,EACX,OAAO,EAGiDG,CAAgBH,GAE5E,OA7DA1B,EAAOD,QACP,SAAS+B,EAAMvB,EAAUC,EAASC,GAC9BA,EAAgBA,MAChBA,EAAcqB,MAAQrB,EAAcqB,OAASrB,EAAcqB,QAAUA,EAAQrB,EAAcqB,MAAQxB,EACnGG,EAAcN,OAASM,EAAcN,QAAUA,EAC/C,OAAOM,EAAcqB,MAAMvB,EAAUC,EAASC,IAwD9CgB,EAAkBzB,EAAOD,SAClBC,EAAOD,QACT0B,EAAkB1B,GAChBA,OADN","file":"../../vdom/patch.js","sourcesContent":["define([\n    'skylark-langx/hoster',\n    'skylark-langx/arrays',\n    './create-element',\n    './dom-index',\n    './patch-op'\n], function (__module__0, __module__1, __module__2, __module__3, __module__4) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var document = __module__0.document;\n    var isArray = __module__1.isArray;\n    var render = __module__2;\n    var domIndex = __module__3;\n    var patchOp = __module__4;\n    module.exports = patch;\n    function patch(rootNode, patches, renderOptions) {\n        renderOptions = renderOptions || {};\n        renderOptions.patch = renderOptions.patch && renderOptions.patch !== patch ? renderOptions.patch : patchRecursive;\n        renderOptions.render = renderOptions.render || render;\n        return renderOptions.patch(rootNode, patches, renderOptions);\n    }\n    function patchRecursive(rootNode, patches, renderOptions) {\n        var indices = patchIndices(patches);\n        if (indices.length === 0) {\n            return rootNode;\n        }\n        var index = domIndex(rootNode, patches.a, indices);\n        var ownerDocument = rootNode.ownerDocument;\n        if (!renderOptions.document && ownerDocument !== document) {\n            renderOptions.document = ownerDocument;\n        }\n        for (var i = 0; i < indices.length; i++) {\n            var nodeIndex = indices[i];\n            rootNode = applyPatch(rootNode, index[nodeIndex], patches[nodeIndex], renderOptions);\n        }\n        return rootNode;\n    }\n    function applyPatch(rootNode, domNode, patchList, renderOptions) {\n        if (!domNode) {\n            return rootNode;\n        }\n        var newNode;\n        if (isArray(patchList)) {\n            for (var i = 0; i < patchList.length; i++) {\n                newNode = patchOp(patchList[i], domNode, renderOptions);\n                if (domNode === rootNode) {\n                    rootNode = newNode;\n                }\n            }\n        } else {\n            newNode = patchOp(patchList, domNode, renderOptions);\n            if (domNode === rootNode) {\n                rootNode = newNode;\n            }\n        }\n        return rootNode;\n    }\n    function patchIndices(patches) {\n        var indices = [];\n        for (var key in patches) {\n            if (key !== 'a') {\n                indices.push(Number(key));\n            }\n        }\n        return indices;\n    }\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}