{"version":3,"sources":["vdom/apply-properties.js"],"names":["define","__module__0","__module__1","exports","module","isObject","isHook","removeProperty","node","propName","propValue","previous","previousValue","unhook","attrName","removeAttribute","i","style","patchObject","props","undefined","getPrototype","replacer","k","value","attrValue","setAttribute","Object","getPrototypeOf","__proto__","constructor","prototype","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","hook"],"mappings":";;;;;;;AAAAA,QACI,sBACA,qBACD,SAAUC,EAAaC,GACtB,aACA,IAAIC,KACAC,GAAWD,YACXE,EAAWJ,EAAYI,SACvBC,EAASJ,EAqBb,SAASK,EAAeC,EAAMC,EAAUC,EAAWC,GAC/C,GAAIA,EAAU,CACV,IAAIC,EAAgBD,EAASF,GAC7B,GAAKH,EAAOM,GAcDA,EAAcC,QACrBD,EAAcC,OAAOL,EAAMC,EAAUC,QAdrC,GAAiB,eAAbD,EACA,IAAK,IAAIK,KAAYF,EACjBJ,EAAKO,gBAAgBD,QAEtB,GAAiB,UAAbL,EACP,IAAK,IAAIO,KAAKJ,EACVJ,EAAKS,MAAMD,GAAK,QAGpBR,EAAKC,GAD2B,iBAAlBG,EACG,GAEA,MAOjC,SAASM,EAAYV,EAAMW,EAAOR,EAAUF,EAAUC,GAClD,IAAIE,EAAgBD,EAAWA,EAASF,QAAYW,EACpD,GAAiB,eAAbX,EAWJ,GAAIG,GAAiBP,EAASO,IAAkBS,EAAaT,KAAmBS,EAAaX,GACzFF,EAAKC,GAAYC,MADrB,CAIKL,EAASG,EAAKC,MACfD,EAAKC,OAET,IAAIa,EAAwB,UAAbb,EAAuB,QAAKW,EAC3C,IAAK,IAAIG,KAAKb,EAAW,CACrB,IAAIc,EAAQd,EAAUa,GACtBf,EAAKC,GAAUc,QAAeH,IAAVI,EAAsBF,EAAWE,QApBrD,IAAK,IAAIV,KAAYJ,EAAW,CAC5B,IAAIe,EAAYf,EAAUI,QACRM,IAAdK,EACAjB,EAAKO,gBAAgBD,GAErBN,EAAKkB,aAAaZ,EAAUW,IAkB5C,SAASJ,EAAaG,GAClB,OAAIG,OAAOC,eACAD,OAAOC,eAAeJ,GACtBA,EAAMK,UACNL,EAAMK,UACNL,EAAMM,YACNN,EAAMM,YAAYC,eADtB,EAUX,SAASC,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OAtFA7B,EAAOD,QACP,SAAyBK,EAAMW,EAAOR,GAClC,IAAK,IAAIF,KAAYU,EAAO,CACxB,IAAIT,EAAYS,EAAMV,QACJW,IAAdV,EACAH,EAAeC,EAAMC,EAAUC,EAAWC,GACnCL,EAAOI,IACdH,EAAeC,EAAMC,EAAUC,EAAWC,GACtCD,EAAU4B,MACV5B,EAAU4B,KAAK9B,EAAMC,EAAUE,EAAWA,EAASF,QAAYW,IAG/Df,EAASK,GACTQ,EAAYV,EAAMW,EAAOR,EAAUF,EAAUC,GAE7CF,EAAKC,GAAYC,IAuE7BsB,EAAkB5B,EAAOD,SAClBC,EAAOD,QACT6B,EAAkB7B,GAChBA,OADN","file":"../../vdom/apply-properties.js","sourcesContent":["define([\n    'skylark-langx/types',\n    '../vnode/is-vhook'\n], function (__module__0, __module__1) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var isObject = __module__0.isObject;\n    var isHook = __module__1;\n    module.exports = applyProperties;\n    function applyProperties(node, props, previous) {\n        for (var propName in props) {\n            var propValue = props[propName];\n            if (propValue === undefined) {\n                removeProperty(node, propName, propValue, previous);\n            } else if (isHook(propValue)) {\n                removeProperty(node, propName, propValue, previous);\n                if (propValue.hook) {\n                    propValue.hook(node, propName, previous ? previous[propName] : undefined);\n                }\n            } else {\n                if (isObject(propValue)) {\n                    patchObject(node, props, previous, propName, propValue);\n                } else {\n                    node[propName] = propValue;\n                }\n            }\n        }\n    }\n    function removeProperty(node, propName, propValue, previous) {\n        if (previous) {\n            var previousValue = previous[propName];\n            if (!isHook(previousValue)) {\n                if (propName === 'attributes') {\n                    for (var attrName in previousValue) {\n                        node.removeAttribute(attrName);\n                    }\n                } else if (propName === 'style') {\n                    for (var i in previousValue) {\n                        node.style[i] = '';\n                    }\n                } else if (typeof previousValue === 'string') {\n                    node[propName] = '';\n                } else {\n                    node[propName] = null;\n                }\n            } else if (previousValue.unhook) {\n                previousValue.unhook(node, propName, propValue);\n            }\n        }\n    }\n    function patchObject(node, props, previous, propName, propValue) {\n        var previousValue = previous ? previous[propName] : undefined;\n        if (propName === 'attributes') {\n            for (var attrName in propValue) {\n                var attrValue = propValue[attrName];\n                if (attrValue === undefined) {\n                    node.removeAttribute(attrName);\n                } else {\n                    node.setAttribute(attrName, attrValue);\n                }\n            }\n            return;\n        }\n        if (previousValue && isObject(previousValue) && getPrototype(previousValue) !== getPrototype(propValue)) {\n            node[propName] = propValue;\n            return;\n        }\n        if (!isObject(node[propName])) {\n            node[propName] = {};\n        }\n        var replacer = propName === 'style' ? '' : undefined;\n        for (var k in propValue) {\n            var value = propValue[k];\n            node[propName][k] = value === undefined ? replacer : value;\n        }\n    }\n    function getPrototype(value) {\n        if (Object.getPrototypeOf) {\n            return Object.getPrototypeOf(value);\n        } else if (value.__proto__) {\n            return value.__proto__;\n        } else if (value.constructor) {\n            return value.constructor.prototype;\n        }\n    }\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}