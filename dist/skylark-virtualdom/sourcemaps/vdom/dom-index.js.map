{"version":3,"sources":["vdom/dom-index.js"],"names":["define","exports","module","noChild","indexInRange","indices","left","right","length","currentIndex","currentItem","minIndex","maxIndex","ascending","a","b","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","rootNode","tree","nodes","sort","recurse","rootIndex","vChildren","children","childNodes","i","vChild","nextIndex","count"],"mappings":";;;;;;;AAAAA,UAAW,WACP,aACA,IAAIC,KACAC,GAAWD,YACXE,KAgCJ,SAASC,EAAaC,EAASC,EAAMC,GACjC,GAAuB,IAAnBF,EAAQG,OACR,OAAO,EAMX,IAJA,IAEIC,EACAC,EAHAC,EAAW,EACXC,EAAWP,EAAQG,OAAS,EAGzBG,GAAYC,GAAU,CAGzB,GADAF,EAAcL,EADdI,GAAgBG,EAAWD,GAAY,GAAK,GAExCA,IAAaC,EACb,OAAOF,GAAeJ,GAAQI,GAAeH,EAC1C,GAAIG,EAAcJ,EACrBK,EAAWF,EAAe,MACvB,CAAA,KAAIC,EAAcH,GAGrB,OAAO,EAFPK,EAAWH,EAAe,GAKlC,OAAO,EAEX,SAASI,EAAUC,EAAGC,GAClB,OAAOD,EAAIC,EAAI,GAAK,EAQxB,SAASC,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OAlEAf,EAAOD,QACP,SAAkBqB,EAAUC,EAAMlB,EAASmB,GACvC,OAAKnB,GAA8B,IAAnBA,EAAQG,QAGpBH,EAAQoB,KAAKZ,GAIrB,SAASa,EAAQJ,EAAUC,EAAMlB,EAASmB,EAAOG,GAC7CH,EAAQA,MACR,GAAIF,EAAU,CACNlB,EAAaC,EAASsB,EAAWA,KACjCH,EAAMG,GAAaL,GAEvB,IAAIM,EAAYL,EAAKM,SACrB,GAAID,EAEA,IADA,IAAIE,EAAaR,EAASQ,WACjBC,EAAI,EAAGA,EAAIR,EAAKM,SAASrB,OAAQuB,IAAK,CAC3CJ,GAAa,EACb,IAAIK,EAASJ,EAAUG,IAAM5B,EACzB8B,EAAYN,GAAaK,EAAOE,OAAS,GACzC9B,EAAaC,EAASsB,EAAWM,IACjCP,EAAQI,EAAWC,GAAIC,EAAQ3B,EAASmB,EAAOG,GAEnDA,EAAYM,GAIxB,OAAOT,EAvBIE,CAAQJ,EAAUC,EAAMlB,EAASmB,EAAO,QA4DnDR,EAAkBd,EAAOD,SAClBC,EAAOD,QACTe,EAAkBf,GAChBA,OADN","file":"../../vdom/dom-index.js","sourcesContent":["define([], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var noChild = {};\n    module.exports = domIndex;\n    function domIndex(rootNode, tree, indices, nodes) {\n        if (!indices || indices.length === 0) {\n            return {};\n        } else {\n            indices.sort(ascending);\n            return recurse(rootNode, tree, indices, nodes, 0);\n        }\n    }\n    function recurse(rootNode, tree, indices, nodes, rootIndex) {\n        nodes = nodes || {};\n        if (rootNode) {\n            if (indexInRange(indices, rootIndex, rootIndex)) {\n                nodes[rootIndex] = rootNode;\n            }\n            var vChildren = tree.children;\n            if (vChildren) {\n                var childNodes = rootNode.childNodes;\n                for (var i = 0; i < tree.children.length; i++) {\n                    rootIndex += 1;\n                    var vChild = vChildren[i] || noChild;\n                    var nextIndex = rootIndex + (vChild.count || 0);\n                    if (indexInRange(indices, rootIndex, nextIndex)) {\n                        recurse(childNodes[i], vChild, indices, nodes, rootIndex);\n                    }\n                    rootIndex = nextIndex;\n                }\n            }\n        }\n        return nodes;\n    }\n    function indexInRange(indices, left, right) {\n        if (indices.length === 0) {\n            return false;\n        }\n        var minIndex = 0;\n        var maxIndex = indices.length - 1;\n        var currentIndex;\n        var currentItem;\n        while (minIndex <= maxIndex) {\n            currentIndex = (maxIndex + minIndex) / 2 >> 0;\n            currentItem = indices[currentIndex];\n            if (minIndex === maxIndex) {\n                return currentItem >= left && currentItem <= right;\n            } else if (currentItem < left) {\n                minIndex = currentIndex + 1;\n            } else if (currentItem > right) {\n                maxIndex = currentIndex - 1;\n            } else {\n                return true;\n            }\n        }\n        return false;\n    }\n    function ascending(a, b) {\n        return a > b ? 1 : -1;\n    }\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}