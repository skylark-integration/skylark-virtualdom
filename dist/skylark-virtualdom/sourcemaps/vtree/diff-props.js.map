{"version":3,"sources":["vtree/diff-props.js"],"names":["define","__module__0","__module__1","exports","module","isObject","isHook","getPrototype","value","Object","getPrototypeOf","__proto__","constructor","prototype","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","diffProps","a","b","diff","aKey","undefined","aValue","bValue","objectDiff","bKey"],"mappings":";;;;;;;AAAAA,QACI,sBACA,qBACD,SAAUC,EAAaC,GACtB,aACA,IAAIC,KACAC,GAAWD,YACXE,EAAWJ,EAAYI,SACvBC,EAASJ,EAwCb,SAASK,EAAaC,GAClB,OAAIC,OAAOC,eACAD,OAAOC,eAAeF,GACtBA,EAAMG,UACNH,EAAMG,UACNH,EAAMI,YACNJ,EAAMI,YAAYC,eADtB,EAUX,SAASC,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OAzDAX,EAAOD,QACP,SAASiB,EAAUC,EAAGC,GAClB,IAAIC,EACJ,IAAK,IAAIC,KAAQH,EAAG,CACVG,KAAQF,KACVC,EAAOA,OACFC,QAAQC,GAEjB,IAAIC,EAASL,EAAEG,GACXG,EAASL,EAAEE,GACf,GAAIE,IAAWC,EAER,GAAItB,EAASqB,IAAWrB,EAASsB,GACpC,GAAIpB,EAAaoB,KAAYpB,EAAamB,IACtCH,EAAOA,OACFC,GAAQG,OACV,GAAIrB,EAAOqB,IACdJ,EAAOA,OACFC,GAAQG,MACV,CACH,IAAIC,EAAaR,EAAUM,EAAQC,GAC/BC,KACAL,EAAOA,OACFC,GAAQI,QAIrBL,EAAOA,OACFC,GAAQG,EAGrB,IAAK,IAAIE,KAAQP,EACPO,KAAQR,KACVE,EAAOA,OACFM,GAAQP,EAAEO,IAGvB,OAAON,GAoBPT,EAAkBV,EAAOD,SAClBC,EAAOD,QACTW,EAAkBX,GAChBA,OADN","file":"../../vtree/diff-props.js","sourcesContent":["define([\n    'skylark-langx/types',\n    '../vnode/is-vhook'\n], function (__module__0, __module__1) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var isObject = __module__0.isObject;\n    var isHook = __module__1;\n    module.exports = diffProps;\n    function diffProps(a, b) {\n        var diff;\n        for (var aKey in a) {\n            if (!(aKey in b)) {\n                diff = diff || {};\n                diff[aKey] = undefined;\n            }\n            var aValue = a[aKey];\n            var bValue = b[aKey];\n            if (aValue === bValue) {\n                continue;\n            } else if (isObject(aValue) && isObject(bValue)) {\n                if (getPrototype(bValue) !== getPrototype(aValue)) {\n                    diff = diff || {};\n                    diff[aKey] = bValue;\n                } else if (isHook(bValue)) {\n                    diff = diff || {};\n                    diff[aKey] = bValue;\n                } else {\n                    var objectDiff = diffProps(aValue, bValue);\n                    if (objectDiff) {\n                        diff = diff || {};\n                        diff[aKey] = objectDiff;\n                    }\n                }\n            } else {\n                diff = diff || {};\n                diff[aKey] = bValue;\n            }\n        }\n        for (var bKey in b) {\n            if (!(bKey in a)) {\n                diff = diff || {};\n                diff[bKey] = b[bKey];\n            }\n        }\n        return diff;\n    }\n    function getPrototype(value) {\n        if (Object.getPrototypeOf) {\n            return Object.getPrototypeOf(value);\n        } else if (value.__proto__) {\n            return value.__proto__;\n        } else if (value.constructor) {\n            return value.constructor.prototype;\n        }\n    }\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}